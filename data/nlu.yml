version: "2.0"
nlu:
- intent: greet
  examples: |
    - ciao
    - hey
    - salve
    - saluti
    - ciaooo
- intent: goodday
  examples: |
    - buongiorno
    - buonpomeriggio
    - buonasera
    - buongiornooo
    - buona giornata
- intent: goodbye
  examples: |
    - arrivederci
    - alla prossima
    - ci vediamo
    - a dopo
    - ci sentiamo
- intent: affirm
  examples: |
    - si
    - yep
    - certo
    - ovvio
    - ok
    - concordo
- intent: ask_prof
  examples: |
    - posso chiedere aiuto al professore
    - contattami il docente
    - contatta il professore
    - chiedi al professore
    - chiedi al docente
    - chiama il docente
    - chiedi aiuto al professore
    - chiedi aiuto al prof
    - chiama il professore
    - fammi parlare con qualcuno
    - voglio contattere qualcuno
    - chiama un docente
    - contatta un docente
    - contatta docente
    - contatta doc
    - contattami un docente
- intent: deny
  examples: |
    - no
    - nop
    - non direi
    - non ho capito
    - non proprio
- intent: thanks
  examples: |
    - grazie
    - ti ringrazio
    - grazie mille
    - ti ringrazio molto
    - infinitamente grazie
- intent: bot
  examples: |
    - chi sei
    - cosa sei
    - sei un bot
    - sto parlando con un bot
    - cosa saresti tu
- intent: slides
  examples: |
    - dove posso trovare le slide relative al corso
    - la raccolta di slide è già disponibile
    - sono disponibili le slide del corso
    - dove trovo le slide del corso
    - dove sono le slide del corso
    - su quale sito trovo le slide del corso
    - è possibile avere o reporerire da qualche parte le slides del cosros
- intent: GUI
  examples: |
    - mi chiedevo se come avveniva per C tratteremo solamente programmi eseguibili in terminale e file al massimo di tipo .txt oppure se inizieremo a creare programmi anche con interfacce grafiche o che trattano file di diverso tipo?
    - tratteremo programmi con file testuali e csv in console oppure anche in ambiente visuale
    - tratteremo l'argomento delle gui in java
    - Scriveremo programmi solo testuali console oppure anche con della grafica
    - vedremo dei programmi in ambiente grafico GUI
- intent: eclipse
  examples: |
    - è normale che ogni tanto si impalli eclipse
    - mi si è bloccato eclipse cosa devo fare
    - non funziona eclipse cosa faccio
    - eclipse è boccato, ora che faccio
    - eclipse mi dà un errore strano non capisco
    - ho trovato un errore strano in eclipse e non funziona più niente
- intent: hineritance
  examples: |
    - che cosa è l'ereditarietà
    - mi parleresti dell'ereditarietà
    - mi spiegeresti l'ereditarietà
    - spiegami l'ereditarietà
    - definiscimi l'reditarietà
    - mi diresti qualcosa sull'ereditarietà
    - quali sono i vantaggi nell'usare l'ereditarietà
    - ereditarietà
    - cosa è l'ereditarietà
- intent: override
  examples: |
    - mi parleresti dell'override
    - mi racconteresti qualcosa sull'override
    - definiscimi l'override
    - definiscimi la sovrascrittura dei metodi
    - come si sovrascrive un metodo
    - mi diresti cosa è l'override
- intent: polymorphism
  examples: |
    - che cosa è il polimorfismo
    - parlami del polimorfismo
    - mi spiegeresti il polimorfismo
    - definiscimi il polimorfismo
    - mi definiresti il concetto di polimorfismo
    - mi racconteresti qualcosa sul polimorfismo
    - mi parleresti del polimormismo
- intent: dynamic_binding
  examples: |
    - cosa è il dynamic binding
    - mi spiegeresti il dynamic binding
    - parlami del dynamic binding
    - definiscimi il dynamic binding
    - mi definiresti il concetto di dynamic binding
    - Come funziona il Dynamic Binding
- intent: casting
  examples: |
    - a cosa serve la conversione dei tipi
    - a cosa serve il casting di oggetti
    - definisci il casting sia implicito che esplicito
    - parlami del casting
    - parlami della conversione dei tipi
    - definisci la conversione dei tipi sia implicito che esplicito
- intent: downcasting
  examples: |
    - a che cosa serve il downcasting
    - che cosa è il downcasting
    - definiscimi il downcast
    - mi potresti descrivere cosa è il downcast
    - mi parleresti del downcasting
    - raccontami il downcasting
- intent: upcasting
  examples: |
    - a che cosa serve l'upcasting
    - definisci cosa è upcasting
    - parlami del'upcasting
    - parlami dell'upcast
    - descrivimi l'upcasting
- intent: visibility
  examples: |
    - quali sono le visibilità di un metodo
    - quali sono le visibilità di un attributo
    - quali sono le visibilità di una classe o attributo
    - quali sono i livelli di visibilità possibili di un metodo
    - quali sono i livelli di visibilità possibili di un attributo
- intent: hineritance_constructor
  examples: |
    - mi spegheresti l'utilizzo dei costruttori ereditati
    - mi spegheresti l'utilizzo dei costruttori nell'ereditarietà
    - come si scrivono i costruttori di classi derivate
    - come si scrivono i costruttori di classi ereditate
    - mi sapresti dire le regole per scrivere i costruttori ereditati
- intent: super
  examples: |
    - come si usa la parola chiave super nelle classe derivate
    - a cosa serve il super nei costruttori
    - a cosa serve il super nei metodi
    - come si usano le parole chiave  super
    - mi spiegheresti come si usano la keyword  super
- intent: class_object
  examples: |
    - mi spegheresti cosa è l'object
    - che cosa è l'Object
    - descrivimi l' object
    - parlami dell'object
    - mi racconti qualcosa sulla object
- intent: class_abstract
  examples: |
    - che cosa è una classe astratta
    - mi spiegheresti cosa è una classe astratta
    - mi diresti qualcosa sulle classi astratte
    - mi racconti qualcosa sulle classi astratte
    - raccontami qualcosa sulle classi astratte
    - quali sono i vantaggi delle classi astratte
- intent: interface
  examples: |
    - mi spiegheresti cosa è una interfaccia
    - mi spieghersti cosa è una interfaccia
    - come si scrive una interfaccia
    - raccontami qualcosa sulle interfacce
    - non riesco a capire quale sia l'utilità di usare un'interfaccia
    - mi diresti qualcosa sulle interfacce
    - parlami delle interfacce
    - quali sono i vantaggi di una interfaccia
    - cosa è una interfaccia
- intent: comparable
  examples: |
    - mi spiegheresti qualcosa sul comparable
    - descrivimi il comparable
    - che cosa è il comparable
    - quando si usa il comparable
    - parlami del comparable
    - mi parleresti dell'interfaccia comparable
- intent: iterator_iterable
  examples: |
    - mi spiegheresti qualcosa sull'iterator
    - mi spiegheresti cosa serve l'iterable
    - descrivimi l'iterator
    - quando si usa l'iterator
    - quali sono i metodi di iterator
    - quale è la differenza tra iterator e iterable
- intent: comparator
  examples: |
    - mi spiegheresti qualcosa sul comparator
    - quali sono i metodi di comparator
    - descrivimi il comparator
    - che cosa è il comparator
    - quando si usa il comparator
- intent: observer_observable
  examples: |
    - mi spiegheresti qualcosa sull'interfaccia observer
    - descrivimi l'interfaccia observer
    - che cosa è l'observable
    - quando si usano observer e observable
    - quale è la differenza tra observer e observable
- intent: lambda
  examples: |
    - che cosa è una funzione lambda
    - mi diresti qualcosa sulle funzioni lambda
    - come si scrive una funzione lambda
    - mi diresti qualche cosa sulle funzioni lambda
    - parlami delle funzioni lambda
    - cosa è una funzione lambda
- intent: method_reference
  examples: |
    - che cosa è un method reference
    - come si scrive un method reference
    - mi faresti un esempio di method reference
    - parlami dei method reference
    - cosa sono i method references
- intent: object_methods_doubt
  examples: |
    - ho un dubbio non capisco come il metodo toString() riesca a convertire un oggetto in una stringa dato che aprendo la classe object tale metodo è vuoto
    - Ho visto che aprendo la classe Object non si vedono i contenuti dei metodi
    - ho visto che aprendo la classe object non si vedono i contenuti dei metodi
    - aprendo la classe Object non si vedono in dettglio i suoi metodi
    - dove trovo o metodi della classe object in dettaglio
- intent: static_final_doubt
  examples: |
    - non mi è ancora chiaro come agiscono i modificatori final e static sui metodi
    - vorrei capire cosa cambia tra un metodo static e uno final
    - vorrei capire la differenza tra un metodo static e uno final
    - vorrei capire bene i metodo static e final, cosa cambia tra i due
    - vorrei capire cosa cambia tra i metodi static e i metodi final
- intent: visibility_variables_main
  examples: |
    - come mai se dichiaro una variabile di tipo public nel main mi dà un errore
    - posso dichiare una variabile public nel main
    - posso dichiarare una classe public nel main
    - posso dichiarare una attributo public nel main
    - posso dichiarare un metodo public nel main
- intent: anonym_class_doubt
  examples: |
    - non ho capito perchè l'operazione di new nella creazione di una classe anonima si può fare solo all'interno di un metodo
    - l'operazione di new per creare una classe anonima si può fare solo all'interno di un metodo
    - perchè l'operazione di new per creare una classe anonima si fa solo all'interno di un metodo
    - perchè l'operazione di new nella creazione di una classe anonima si può fare solo all'interno di un metodo
    - non so se l'operazione di new per creare una classe anonima si può fare solo all'interno di un metodo
- intent: equals_doubt
  examples: |
    - perchè se scrivo nel mio programma il metodo uguali non funziona se uso equals a cosa può essere dovuto l'errore
    - come mai il metodo uguali non funziona se uso equals invece di ==
    - come mai il metodo uguali non funziona se uso equals invece di == nel mio programma
    - come mai il metodo uguali non funziona se uso equals invece dell'operatore di uguaglianza nel programma lezione in aula
    - perchè se scrivo nel mio programma il metodo ugualio se uso equals, non funziona a cosa può essere dovuto l'errore
- intent: arraysort_pattern_doubt
  examples: |
    - volevo capire se il metodo arrays.sort è un pattern dato che fornisce una soluzione a un problema ricorrente cioè l'ordinamento di una lista di dati
    - il metodo arrays.sort è un pattern dato che fornisce una soluzione a un problema ricorrente
    - il metodo arrays.sort è un pattern
    - il metodo arrays.sort può essere visto come un pattern
    - il metodo arrays.sort potrebbe essere un pattern che fornisce una soluzione a u problema ricorrente
- intent: charAt_doubt
  examples: |
    - nelle lambda functions e method references quando fa l'esempio dell'implementazione dell'interfaccia il metodo charAt dove è definito
    - dove viene definito il metodo charAt dell'implementazione dell'interfaccia
    - dove è definito il metodo charAt dell'implementazione dell'interfaccia
    - doce trovo il contenuto del metodo charAt
    - come viene definito il metodo charAt
- intent: class_general_doubt
  examples: |
    - le general non perdono l'elasticità del tipo object. il loro scopo é di permettere di cambiare più facilmente il tipo di dato manipolato dai suoi metodi senza intervenire sulla definizione di ogni singolo metodo
    - le general non perdono l'elasticità del tipo object
    - le general non perdono l'elasticità del tipo di instanza object
    - le general perdono l'elasticità del tipo di object oppure no
    - lo scopo dei general é di permettere di cambiare più facilmente il tipo di dato manipolato dai suoi metodi senza intervenire sulla definizione di ogni singolo metodo
- intent: referent_methods_doubt
  examples: |
    - il compilatore come riconosce quale metodo equals() utilizzare
    - il compilatore come riconosce quale metodo equals() usare
    - come fa il compilatore a sapere se usare il metodo equals() della classe object originale o quello sovrascritto
    - ll compilatore sa quando usare il metodo equals() della classe object
    - ll compilatore come fa a sapere se usare il metodo equals() della classe object oppure uno sovrascritto
- intent: comparing_doubt
  examples: |
    - mi potresti dare i dettagli di comparing
    - mi diresti dove si trova il comparing dell'interfaccia comparator
    - mi diresti cosa contiene il comparing della classe comparator
    - mi diresti cosa he all'interno il comparing della classe comparator
    - mi parleresti del metodo comparing della classe comparator
- intent: difference_dynamic_bind_upcast
  examples: |
    - mi sono sorti dei dubbi ripassando dynamic binding e upcast in particolare non mi è chiara la differenza tra le due me le puoi rispiegare
    - mi rispiegheresti quale è la differenza tra dynamic binding e upcast
    - quali sono le differenze tra dynamic binding e upcast
    - quale differenza c'è tra upcasting e dynamic binding
    - quale è la differenza tra dynamic binding e upcast
- intent: hineritance_tree
  examples: |
    - che cosa è l'hineritance tree
    - mi parleresti dell'hineritance tree
    - che cosa è l'albero dell'ereditarietà
    - mi definiresti cosa è l'albero dell'ereditarietà
    - forniscimi un esempio di albero dell'ereditairetà
- intent: terminology
  examples: |
    - mi forniresti la lista di terminologie corrette da usare nell'ereditarietà
    - dimmi le terminologie corrette da usare nelle classi ereditate
    - dimmi le terminologie usate nelle classi ereditate
    - quali sono le terminologie corrette usate nell'ereditarietà
    - elencami alcune terminologie corrette usate nell'ereditarietà
- intent: instanceof
  examples: |
    - cosa serve la keyword instanceof
    - cosa serve l'operatore instanceof
    - fornisci un esempio con instanceof
    - parlami della keyword instanceof
    - parlami dell'operatore instanceof
- intent: this
  examples: |
    - a cosa serve la keyword this
    - cosa serve il this nelle classi
    - cosa è this
    - cosa serve il this
    - parlami della keyword this
- intent: final
  examples: |
    - cosa serve la keyword final
    - cosa è un attributo final
    - cosa è un metodo final
    - cosa serve la keyword final
    - parlami della keyword final
- intent: pattern
  examples: |
    - che cosa è un pattern
    - mi definiresti cosa è un pattern
    - definiscimi un pattern
    - descrivimi cosa è un pattern
    - mi sapresti definire cosa è un pattern
- intent: static_methods
  examples: |
    - cosa sono i static methods
    - a cosa servono gli static methods
    - cosa è uno static methods
    - mi parleresti degli static methods
    - cosa sono i metodi statici
    - mi descriveresti i static methods
- intent: functional_interface
  examples: |
    - cosa sono le interfacce funzionali
    - cosa sono le functional interface
    - cosa sono le functional interface
    - mi parleresti delle interfacce funzionali
    - raccontami qualcosa sulle interfacce funzionali
    - mi parleresti delle functional interface
- intent: default_methods
  examples: |
    - a cosa servono i default methods
    - cosa sono i default methods
    - cosa è un default method
    - cosa sono i metodi di default
    - a cosa possono servire i default methods
- intent: anonymous_class
  examples: |
    - cosa è una classe anonima
    - mi parleresti delle classi anonime
    - mi spiegheresti le classi anonime
    - come si scrive una classe anonima
    - mi descriveresti una classe anonima
    - mi racconteresti qualcosa sulle clasi anonime
    - cosa sono le anonymous class
- intent: advantages
  examples: |
    - quali sono i suoi vantaggi
    - mi diresti i suoi vantaggi
    - mi parleresti dei suoi vantaggi
    - quali sono i suoi vantaggi?
    - quali sono i suoi vantaggi principali
- intent: factory_methods
  examples: |
    - non capisco bene il vantaggio dell'utilizzo dei Factory Methods nelle interfacce rispetto ad usare un costruttore
    - quale è il vantaggio nell'usare i factory methods nelle interfaccie
    - mi sapresti dire il vantaggio nell'usare i factory methods nelle interfaccie
    - perchè è vantaggioso usare i Factory Methods nelle interfacce rispetto ad usare un costruttore
    - come mai è vantaggioso usare i Factory Methods nelle interfacce rispetto ad usare un costruttore
